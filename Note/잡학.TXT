노드, npm 버전확인 
cmd 창에서 node -v, npm -v

provisioning = 사용자의 요구에 맞게 시스템 자원을 할당, 배치, 배포해 두었다가 필요 시 시스템을 즉시 사용할 수 있는 상태로 미리 준비해 두는 것

서버리스의 이슈 - 
1. 요청을 하지 않음에도 서버를 가동시키는 데에 요금을 받는다.
2. 서버 및 모든 리소스의 가동 시간 및 유지보수를 책임지고 있음
3. 서버에 적절한 보안 업데이트를 적용할 책임이 있다
4. 사용량이 증가함에 따라 서버 확장도 관리해야 한다. 따라서 사용량이 많지 않을 때 이를 축소할 수 있음

마이크로 서비스란 ? 
https://www.redhat.com/ko/topics/microservices/what-are-microservices

서비스 지향 아키텍처(SOA) - 애플리케이션을 별개의 재사용 가능한 서비스 단위로 분할

API(애플리케이션 프로그래밍 인터페이스)

SOA 에서 마이크로서비스로

마이크로서비스 아키텍처의 장점
1. 마이크로서비스는 분산형 개발을 통해 팀의 역량과 일상적인 업무 능력을 향상
2. 동시에 여러 마이크로서비스를 개발하는 것도 가능, 따라서 개발에 소요되는 시간 단축.

YML 파일이란?
xml이나 json같은 정보 적재하는 코드는 불필요한 태그들이 쓰여지는걸 읽기 쉽고 쓰기 쉽도록 만들어진 포맷형식이다.

YML의 정의
YAML is a human friendly data serialization
standard for all programming languages.

package-lock.json 이란? 
package-lock.json 은 npm을 사용하여 package.json 파일을 또는 node_modules 트리를 수정하면 자동으로 생성되는 파일이다. 
파일이 생성되는 시점의 의존성 트리에 대한 정보를 가지고 있다.
따라서 되도록 package.json과 같이 커밋관리를 해주는것이 좋다. 

Babel이란?
자바스크립트 컴파일러로서, 최신의 자바스크립트 코드를 이전 단계의 자바스크립트 코드로 변환 가능하게 해주는 개발도구, 트랜스파일러다.
Babel을 사용하면 웹브라우저간의 호환성을 자동으로 잡아준다.

Webpack이란?
웹팩은 프로젝트의 구조를 분석하고 자바스크립트 모듈을 비롯한 관련 리소스들을 찾은 다음 이를 브라우저에서 이용할 수 있는 번들로 묶고 패킹하는 모듈 번들러(Module bundler)다.
Webpack이 실행된다면 Dependencies Graph를 통해 필요한 형태의 하나 또는 여러개의 Bundle로 생성된다.
https://jusungpark.tistory.com/52 참고함.

serverless-bundle은 serverless-webpack의 확장 플러그인으로 lambda함수를 적절한 기본값으로 번들을 제공하므로 고유한 webpack 구성을 유지할 필요가 없다.
이 bundle을 설치하면 webpack, Babel, ESLint를 설치하거나 관리하지 않아도 작동한다.
serverless-bundle의 역할
 - ESLint를 통한 린팅
 - 빠른 빌드를 위한 캐싱
 - ES6 import/export
 - babel-jest로 트랜스파일링 단위테스트 지원
 - 오류 메시지에 대한 소스 맵 지원
https://www.npmjs.com/package/serverless-bundle

serverless-offline은 로컬 머신에서 AWS및 API 게이트웨이를 에뮬레이션해 개발주기를 단축시켜준다. 
https://www.npmjs.com/package/serverless-offline

DynamoDB 메소드의 promise 형식
 Promise는 표준 콜백함수 구문 대신 사용할 비동기 코드를 관리하는 방법이다. 코드를 훨씬 쉽게 읽을 수 있다.

async, await를 사용하여 비동기 javascript를 동기식으로 만들자
https://blueshw.github.io/2018/02/27/async-await/
